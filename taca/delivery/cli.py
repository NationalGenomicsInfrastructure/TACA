"""CLI for the delivery subcommand."""  # furure todo: rename to "deliver" when fully implemented and taca-ngi-pipieline is deprecated

import logging

import click

from taca.delivery import deliver
from taca.utils.config import load_yaml_config

logger = logging.getLogger(__name__)


@click.group()
def delivery():
    """Delivery methods entry point."""
    pass


### Stage data ###
@delivery.command()
@click.option(
    "-f",
    "--flowcells",
    type=str,
    help="Restrict action to specific flowcell(s). e.g.: 241122_VH00204_464_AAG77JJN5,241120_VH00202_453_AAG76JJM7",
)
@click.option(
    "-s",
    "--samples",
    type=str,
    help="Restrict action to specific sample(s). e.g.: P123_1001,P123_1002 (currently only Illumina and Aviti)",
)
@click.argument("project")
def stage(project, flowcells, samples):
    """Stage a project in DELIVERY and setup DDS delivery project."""
    flowcells_to_stage = flowcells.split(",") if flowcells else None
    samples_to_stage = samples.split(",") if samples else None
    deliver.stage(project, flowcells=flowcells_to_stage, samples=samples_to_stage)


### Upload data ###
@delivery.command()
@click.option(
    "--stage_dir",
    type=str,
    required=True,
    help="Staged directory to upload",
)
@click.option(
    "--order_portal",
    default=None,
    envvar="ORDER_PORTAL",
    required=True,
    type=click.File("r"),
    help="Path to order portal credantials to retrive project information",
)
@click.option(
    "--statusdb_config",
    default=None,
    envvar="STATUS_DB_CONFIG",
    required=True,
    type=click.File("r"),
    help="Path to statusdb config file",
)
@click.option(
    "--pi_email",
    default=None,
    type=str,
    help="PI email, to override PI email stored in order portal",
)
@click.option(
    "--add_user",
    multiple=True,
    type=click.STRING,
    help="Add additional user to DDS project. Multiple users can be given by calling this option multiple times",
)
@click.option(
    "--project_description",
    default=None,
    type=click.STRING,
    help="Override project description in order portal, e.g. if project not in order portal",
)
@click.option(
    "--ignore_orderportal_members",
    is_flag=True,
    default=False,
    help="Do not fetch member information from the order portal",
)
@click.argument("project")
def upload(
    project,
    stage_dir,
    statusdb_config=None,
    order_portal=None,
    pi_email=None,
    add_user=None,
    project_description=None,
    ignore_orderportal_members=False,
):
    """Upload a staged project to DDS."""
    load_yaml_config(statusdb_config.name)
    load_yaml_config(order_portal.name)
    deliver.upload_to_dds(
        project,
        stage_dir,
        pi_email=pi_email,
        add_user=list(set(add_user)),
        project_description=project_description,
        ignore_orderportal_members=ignore_orderportal_members,
    )


### Release data ###
@delivery.command()
@click.option(
    "--dds_project",
    type=str,
    required=True,
    help="DDS PID to release, generated by the upload command",
)
@click.option(
    "--dds_deadline",
    default=45,
    type=click.IntRange(1, 90),
    help="Deadline for DDS project in days [min 1; max 90; default 45]",
)
@click.option(
    "--no_dds_mail",
    is_flag=True,
    default=False,
    help="Do not send DDS e-mail notifications regarding project updates",
)
@click.argument("project")
def release(project, dds_project, dds_deadline, no_dds_mail):
    """Release a DDS project to user."""
    deliver.release_dds_project(project, dds_project, dds_deadline, no_dds_mail)
